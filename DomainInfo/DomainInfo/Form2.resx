<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AAAAAAAAAAAAAAAAAAKAAAABAAAAAAAAAAQ=
</value>
  </data>
</root>